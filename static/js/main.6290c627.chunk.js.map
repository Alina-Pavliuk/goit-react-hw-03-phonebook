{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/App.module.css","Components/ContactList/ContactList.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","ContactForm","initialState","number","name","state","handlerInput","target","value","setState","submitHandler","e","preventDefault","singleContact","id","uuidv4","props","addContact","this","className","styles","onSubmit","titleLabel","inputForm","type","placeholder","onChange","formButton","Component","ContactItem","removeContact","paragraph","removeBtn","onClick","ContactList","contacts","contactsList","map","contact","contactItem","Filter","filter","filterHandler","filterLabel","filterInput","App","contactObj","some","el","alert","prev","filterContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","wrapper","phonebookTitle","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6290c627.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3tY0G\",\"formButton\":\"App_formButton__2c67t\",\"phonebookTitle\":\"App_phonebookTitle__3BW5D\",\"contactsTitle\":\"App_contactsTitle__2En78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__eo8FE\",\"contactItem\":\"ContactList_contactItem__5NCb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel\":\"Filter_filterLabel__2ZNSx\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  initialState = {\n    number: \"\",\n    name: \"\",\n  }\n\n  state = {\n    number: \"\",\n    name: \"\",\n  }\n\n  handlerInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  submitHandler = (e) => {\n    const { name, number } = this.state\n    e.preventDefault();\n    const singleContact = {\n      name,\n      number,\n      id: uuidv4(),\n    }\n    this.props.addContact(singleContact)\n    this.setState({ ...this.initialState })\n  }\n\n  render() {\n    const { number, name } = this.state\n    return (\n      <form className={styles.ContactForm} onSubmit={this.submitHandler}>\n        <label>\n          <span className={styles.titleLabel}>Name</span>\n          <input\n            className={styles.inputForm}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            placeholder=\"Name\"\n            onChange={this.handlerInput}\n          />\n        </label>\n        <label>\n          <span className={styles.titleLabel}> Number</span>\n          <input\n            className={styles.inputForm}\n            type=\"text\"\n            value={number}\n            name=\"number\"\n            placeholder=\"Number\"\n            onChange={this.handlerInput}\n          />\n        </label>\n        <button className={styles.formButton} type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  addContact: PropTypes.func.isRequired\n}","import React from 'react';\nimport styles from './ContactItem.module.css'\nimport PropTypes from \"prop-types\";\nconst ContactItem = ({ id, name, number, removeContact }) => {\n  return (\n    <>\n      <p className={styles.paragraph}>{name}: {number}</p>\n      <button\n        className={styles.removeBtn}\n        type=\"button\"\n        onClick={(e) => {\n          removeContact(id);\n        }}>\n        Remove\n      </button>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  removeContact: PropTypes.func.isRequired\n}","import React from 'react';\nimport styles from './ContactList.module.css';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map(contact =>\n        <li key={contact.id} className={styles.contactItem}>\n          <ContactItem {...contact} removeContact={removeContact} />\n        </li>\n      )}\n    </ul >\n  )\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\nimport styles from './Filter.module.css'\nimport PropTypes from \"prop-types\";\n\nclass Filter extends Component {\n  render() {\n    const { filter, filterHandler } = this.props\n    return (\n      <>\n        <label>\n          <span className={styles.filterLabel}> Find contacts by name</span>\n          <input\n            className={styles.filterInput}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={filterHandler}\n            placeholder=\"Search\"\n          />\n        </label>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter'\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { name: 'Rosie Simpson', number: '459-12-56', id: 'id-1', },\n      // { name: 'Hermione Kline', number: '443-89-12', id: 'id-2', },\n      // { name: 'Eden Clements', number: '645-17-79', id: 'id-3', },\n      // { name: 'Annie Copeland', number: '227-91-26', id: 'id-4', },\n    ],\n    filter: ''\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      })\n    }\n  }\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  //   }\n  // }\n\n  addContact = (contactObj) => {\n    if (this.state.contacts.some(el => el.name === contactObj.name)) {\n      alert(`${contactObj.name} is already contacts`);\n      return;\n    }\n    this.setState((prev) => ({\n      contacts: [...prev.contacts, contactObj]\n    }));\n\n  };\n\n  removeContact = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter(el => el.id !== id)\n    }));\n  }\n\n  filterHandler = (e) => {\n    this.setState(() => ({\n      filter: e.target.value\n    }));\n  }\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.filterContacts();\n    return (\n      <div className={styles.wrapper}>\n        <h2 className={styles.phonebookTitle}>Phonebook</h2>\n\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n        <h3 className={styles.contactsTitle}>Contacts</h3>\n\n        <Filter filter={filter} filterHandler={this.filterHandler} />\n        <ContactList contacts={filteredContacts} removeContact={this.removeContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}